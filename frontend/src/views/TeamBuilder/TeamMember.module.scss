@use '../../styles/types';

@use '../../styles/colours.scss';

$defaultSecondTypeColour: white;

$container-fixed-height: 200px;
// native sprite resolution is 96x96
$sprite-width: 96px;
$sprite-height: 96px;



// member container contains: infoContainer & movesContainer.
.memberContainer {
    display: flex;
    flex-direction: row;
    justify-content:space-between;
    align-items: center;

    box-sizing: border-box;
    border-radius: 15px;
    padding: 10px;
    height: $container-fixed-height;
    width: 400px;

    > div {
        flex: 1 0 50%;
    }

}


// setting background colours
@each $key1, $value1 in types.$typeColours {
    @each $key2, $value2 in types.$typeColours {
        .memberContainer.type1-#{$key1}.type2-#{$key2} {
            background: linear-gradient(10deg, #{$value1} 0 50%, #{$value2} 75% 100%);
        }
    }
    .memberContainer.type1-#{$key1} {
        background: linear-gradient(45deg, #{$value1}, 70%, #{$defaultSecondTypeColour} );
    }
}

// for empty team slot
.memberContainer.empty {
    border: none;
    background: linear-gradient( to right, colours.$black, 30%, colours.$light-grey);

    .sprite {
        height: $sprite-height;
        width: $sprite-width;
        object-fit: contain;
    }

}

// info container contains name, sprite, type, ability
.infoContainer {
    display: flex;
    flex-direction: column;
    align-items: center;

    box-sizing: border-box;
    padding: 5px;

    // contains name and delete button
    .nameContainer {
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-around;

        .removeButton {
            margin: 0;

            p {
                margin: 0;
            }
        }

        label {
            background-color: colours.$light-grey;
            border-radius: 10px;
            padding: 5px;
            border: 2px colours.$dark-grey solid;


            &:hover {
                cursor: pointer;
            }
        }


    }

    .sprite {
        height: $sprite-height;
        width: $sprite-width;
        object-fit: contain;

        &:hover {
            cursor: pointer;
        }
    }

    .typeContainer {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        padding: 5px;
    }
}


.movesContainer {   
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    background-color: rgba(colours.$light-grey, .35);
    border-radius: 10px;

    display: flex;
    flex-direction: column;
    justify-content: space-around;
    padding: 5px;
}